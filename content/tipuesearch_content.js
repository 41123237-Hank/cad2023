var tipuesearch = {"pages": [{'title': 'About', 'text': ' https://github.com/mdecycu/cmsite \n 歡迎來到41123237黃瀚責的網站 \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍) \n Variables ( Python Keywords ) \n Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解) \n Numbers  (整數 int(), 浮點數 float()) \n Strings  (字串) \n print (Python 內建函式,  print()  函式) \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n', 'tags': '', 'url': 'Brython.html'}, {'title': '任務一', 'text': '', 'tags': '', 'url': '任務一.html'}, {'title': 'Fusion 360繪製', 'text': 'Fusion 360是 由Autodes k 開發的商業 \xa0電腦輔助設計 (CAD)、電腦輔助製造 (CAM)、 \xa0電腦輔助工程 (CAE) 和印刷電路板 (PCB) 設計軟體應用程式 \n \n 使用Fusion 360繪製 \n \n \n \n \n \n', 'tags': '', 'url': 'Fusion 360繪製.html'}, {'title': 'W12', 'text': '機械設計二乙出席座位表 \n https://mde.tw/cadnote/downloads/2b_w12_seat.txt \n 2b stud num\tseat\n41123201\t\n41123202\t(3,8)\n41123203\t(3,7)\n41123204\t(6,8)\n41123205\t(2,9)\n41123206\t(3,4)\n41123207\t(1,5)\n41123208\t(2,3)\n41123209\t(2,6)\n41123210\t(4,3)\n41123211\t(6,2)\n41123212\t(1,7)\n41123213\t(1,3)\n41123214\t(4,1)\n41123215\t(1,4)\n41123216\t(6,9)\n41123217\t(6,7)\n41123218\t(4,5)\n41123219\t\n41123220\t(1,1)\n41123221\t(2,2)\n41123222\t(3,9)\n41123223\t(3,5)\n41123224\t(4,2)\n41123226\t(3,3)\n41123227\t(3,6)\n41123228\t\n41123229\t(5,2)\n41123230\t(2,7)\n41123231\t(1,2)\n41123232\t(6,5)\n41123233\t(2,8)\n41123234\t\n41123235\t(5,1)\n41123236\t(5,3)\n41123237\t(1,9)\n41123238\t(1,8)\n41123239\t(4,8)\n41123240\t(4,4)\n41123241\t(5,7)\n41123243\t(5,8)\n41123244\t\n41123245\t(4,9)\n41123246\t(5,6)\n41123247\t(6，3)\n41123248\t\n41123249\t(5,9)\n41123250\t(5,5)\n41123251\t(5,4)\n41132222\t(6,4)\n41136103\t(7,3)\n41136124\t(3,2)\n41136126\t\n41136131\t \n \n', 'tags': '', 'url': 'W12.html'}, {'title': '網路設定', 'text': '\n', 'tags': '', 'url': '網路設定.html'}, {'title': '零組件繪圖', 'text': '\n', 'tags': '', 'url': '零組件繪圖.html'}, {'title': '系統模擬', 'text': '\n', 'tags': '', 'url': '系統模擬.html'}, {'title': 'exam', 'text': '利用自選的電腦輔助設計套件建立\xa0 https://mde.tw/cadnote/content/pms.html \xa0 中的零組件 (尺寸與操控內容請自訂), 並加入感測器與適當的設計元件或機構, 說明預計如何令其在接上外部電源後, 能夠讓系統中的鋼球在軌道上進行永動模擬 \n \n', 'tags': '', 'url': 'exam.html'}, {'title': '鋼球永動模擬器', 'text': '\n \n', 'tags': '', 'url': '鋼球永動模擬器.html'}, {'title': 'CoppeliaSim嘗試使用', 'text': '先使用老師給予的範本使鋼球於三角斜面上進行永動模擬 \n \n \n 套用模板 \n \n 球作動影片 \n 花費一些時間研究,但仍然只能使球於斜面上做動一小段時間,且對force大小設定不了解 \n', 'tags': '', 'url': 'CoppeliaSim嘗試使用.html'}, {'title': '課程教學影片', 'text': '教學影片 (登入 nfu Teams 才可以觀看): \n 1. \xa0 利用批次檔、登錄檔與 powershell 執行網路設定 \xa0 (7:15) \n 2. \xa0 Onshape 零組件轉入 CoppeliaSim \xa0 (19:58) \n 3. \xa0 從 github 空倉儲建立 cmsimde 網際內容管理倉儲 \xa0 (15:22) \n 4. \xa0 之二 \xa0 (34:20) \n 5. \xa0 利用 Pull Requests 提出修改 studlist 倉儲資料的用法 \xa0 (7:58) \n 6. \xa0 利用 SSH 協定取下倉儲並啟動編輯網站 \xa0 (22:05) \n 7. \xa0 之二 \xa0 (10:16) \n 8. \xa0 s.cycu.org 伺服器設定操作 \xa0 (18:47) \n 9. \xa0 之二 \xa0 (9:46) \n 10. \xa0 之三 \xa0 (13:58, 無語音說明) \n 11. \xa0 之四 \xa0 (21:30) \n 12. \xa0 之五 \xa0 (19:02) \n 13. \xa0 Wink 操作說明 \xa0 (2:05) \n 14. \xa0 課程內容摘要簡報說明 \xa0 (26:22) \n 15. \xa0 之二 \xa0 (12:22) \n 16. \xa0 利用 ChatGPt 協助座位排序與列印問題 \xa0 (9:36) \n 17. \xa0 之二 \xa0 (13:53, 有嚴重回音) \n 18. \xa0 利用 Solvespace 繪製零組件並轉入 CoppeliaSim \xa0 (17:55) \n 19. \xa0 之二 \xa0 (23:05, 有嚴重回音) \n 20. \xa0 簡化後的專案一鋼球永動模擬操作 \xa0 (12:37) \n 21. \xa0 之二 \xa0 (9:33) \n 22. \xa0 之三 \xa0 (21:09) \n 23. \xa0 之四 \xa0 (4:34) \n 24. \xa0 專案二 \xa0 (16:46) \n 25. \xa0 之二 \xa0 (15:41) \n 26. \xa0 之三 \xa0 (14:15) \n \n \n \n', 'tags': '', 'url': '課程教學影片.html'}]};